language: python
python:
  - 3.6
install:
  - pip install -r requirements-test.txt
script:
  - coverage run tests.py

after_success:
  - codecov
  - REPO=scottx611x/refinery-higlass-docker
  - IMAGE=`docker ps --latest --format '{{ .Image }}'` # TODO: with more containers, can't rely on ordering
  - tag_push() { echo "Tagging into $2"; docker tag $1 $2; docker push $2; }

  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  # Always update "latest": the cache will be used for the next build.
  - tag_push $IMAGE $REPO
  - >
      if [ "$TRAVIS_EVENT_TYPE" == "pull_request" ]; then
        echo "PR!";

        BRANCH=`echo ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH} | perl -pne 'chomp;s{.*/}{};s/\W/-/g'`;
        tag_push $IMAGE $REPO:$BRANCH;
        tag_push $IMAGE $REPO:latest-pr;
      fi
  - >
      if [ ! -z "$TRAVIS_TAG" ]; then
        echo "Git tag!";
        tag_push $IMAGE $REPO:$TRAVIS_TAG;
        tag_push $IMAGE $REPO:latest;
      fi

notifications:
 email:
    recipients:
      - Scott_Ouellette@hms.harvard.edu
    on_success: never
    on_failure: always
env:
  global:
    - secure: "FLA1YpZuuyY5/2c70HYY9VZlOiKInd5c3ZdJS6I5h7wZgDVcRhs3/DbGeH4189irhPPixyQXXq7omHh4nm4x4ud0xB3HMlAEjeiA3UZI5T22qZs3lwtpoQcMybituZNJAGJ85VxctIC+3Tl7M6PduTVOMV4huAnfoQQucq1+IzWi9Rb1V51Rxvb2wysPApPLFGkgqgyOvGbmAmOBcf3rqsedzFsa0ZHpSi+SfshY2G3kIl7Miqj1ufLEU8Uiom+FhihUq2Pp+SXJlbYpbsjyZeSKZ5VRIKWfaV8TRjPYP1Has24uWgJANECrU/oQGPx+2WZBl8QjXnLeMrtjFFklPDVENMDCX3Cpz5qWX/hmi0AGZoo1nY9fpsLX9hi/I1Tob3mhwaN+G7Amr/XDvCH0qZWVcohvNof7Rt3Z+tgqbiuAm/ongOESzbskrkATs1LIm/030/eriP4VD/q4WgMLntMj1i2T7obpLxa4Soam7o/YgR6suAvCj2BIQlWB0/04/61x5hshIdyPls9mJs/wA5gJN0vGrzosII1G6tJaaJvVtwh+dTOqBWLHOO9gQwchzFad2FvtOupZngxezVa1vrtx5Y9Nx23w1Z42cuaLWmuj+fNVgKeS7Tp6by5CTaCmZ7iK+UU/rKjmDfaklZP7o9UYjPd0BU+2YGrOzedofs0="
    - secure: "djVdj/7zZDPN/3Ma5+DM+2SxhXzsP29Sa47wj3/apzNYdxEqffrJOBFr4phJ4ykmp3lVc93Yu0YJ5s0ZCo0mvZ1hpL37LhwfTeeCbbcvSCYkrJB0jhz7pC2hcezXxSKy0OBGT0FpxK0p/lfc6EKR1ZdADPnbyyUmLdbXWeA0mjgDFHMlh4k/uixZhrStvXCbZOFKaM215vNJUYQ8PXxFJFwfXfErLl0WYpHTlbhRxBUjhHDp4hLmhv9Ra096lxRCgwdwj4QtUpl0hZXLlX4ZfNLqK8w8MDr7ZUFm7ttfMi1hWx8RSsD+MWXW3ouxvOThjIaz+1sKne7McPdlP8Av0GOh/WA5b0XzJvILRij0ftcxp58ZTZjfkkXhHA6SYCaZR3kOULXSKdsSbLpOQtxDidHyRacLx622hCJmw1R57Kf19WMc6IBnSEF3salupDJlg0FSCrUpbQc7kD47b7JhQI6VQ1LxxcbEtsb5yEOvs7QTbWkngfdgrfDM6mlFCayGp5NDsvyzHTX70BLD2Q3YK7ycG/2DE+Teh0MGI7iA20CRg+53f5GO7IRo93nCzCd39IWZIdyj0Ro4Em+ZoAxPYLQU+zVBDySRPIaVTLb0VlaXcsFOGDsDlSQbg8Kloe9fJdepePuqooDcgAMmUTEzZZ81f5SoaGXeeZC+sBUg7mo="